<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- 定义日志文件的存储路径 -->
    <property name="LOG_HOME" value="D:/share/logs"/>

    <!-- 定义日志文件的名称 -->
<!--    <property name="LOG_HOME_INFO" value="${LOG_HOME}/info/"/>-->
<!--    <property name="LOG_HOME_WARN" value="${LOG_HOME}/warn/"/>-->
<!--    <property name="LOG_HOME_ERROR" value="${LOG_HOME}/error/"/>-->
<!--    <property name="LOG_HOME_DEBUG" value="${LOG_HOME}/debug/"/>-->

    <!-- 定义日志的输出格式 -->
<!--    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash; 文件输出日志的最大历史 60天 &ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; 每天滚动一次 &ndash;&gt;-->
<!--            <fileNamePattern>${LOG_HOME_INFO}%d{yyyy-MM-dd}.log</fileNamePattern>-->
<!--            &lt;!&ndash; 保留历史日志文件的最大天数 &ndash;&gt;-->
<!--            <maxHistory>60</maxHistory>-->
<!--        </rollingPolicy>-->

<!--        &lt;!&ndash; 设置日志文件的输出格式 &ndash;&gt;-->
<!--        <encoder>-->
<!--            <pattern>%date %level %logger{10} %msg%n</pattern>-->
<!--        </encoder>-->
<!--    </appender>-->

<!--    <appender name="WARN_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash; 文件输出日志的最大历史 60天 &ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; 每天滚动一次 &ndash;&gt;-->
<!--            <fileNamePattern>${LOG_HOME_WARN}%d{yyyy-MM-dd}.log</fileNamePattern>-->
<!--            &lt;!&ndash; 保留历史日志文件的最大天数 &ndash;&gt;-->
<!--            <maxHistory>60</maxHistory>-->
<!--        </rollingPolicy>-->

<!--        &lt;!&ndash; 设置日志文件的输出格式 &ndash;&gt;-->
<!--        <encoder>-->
<!--            <pattern>%date %level %logger{10} %msg%n</pattern>-->
<!--        </encoder>-->
<!--    </appender>-->

<!--    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash; 文件输出日志的最大历史 60天 &ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; 每天滚动一次 &ndash;&gt;-->
<!--            <fileNamePattern>${LOG_HOME_ERROR}%d{yyyy-MM-dd}.log</fileNamePattern>-->
<!--            &lt;!&ndash; 保留历史日志文件的最大天数 &ndash;&gt;-->
<!--            <maxHistory>60</maxHistory>-->
<!--        </rollingPolicy>-->

<!--        &lt;!&ndash; 设置日志文件的输出格式 &ndash;&gt;-->
<!--        <encoder>-->
<!--            <pattern>%date %level %logger{10} %msg%n</pattern>-->
<!--        </encoder>-->
<!--    </appender>-->

<!--    <appender name="DEBUG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash; 文件输出日志的最大历史 60天 &ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; 每天滚动一次 &ndash;&gt;-->
<!--            <fileNamePattern>${LOG_HOME_DEBUG}%d{yyyy-MM-dd}.log</fileNamePattern>-->
<!--            &lt;!&ndash; 保留历史日志文件的最大天数 &ndash;&gt;-->
<!--            <maxHistory>60</maxHistory>-->
<!--        </rollingPolicy>-->

<!--        &lt;!&ndash; 设置日志文件的输出格式 &ndash;&gt;-->
<!--        <encoder>-->
<!--            <pattern>%date %level %logger{10} %msg%n</pattern>-->
<!--        </encoder>-->
<!--    </appender>-->

    <!-- 定义日志级别 -->
<!--    <root level="INFO">-->
<!--        <appender-ref ref="INFO_FILE"/>-->
<!--    </root>-->

    <!-- Appenders for different levels -->
<!--    <logger name="infoLogger" level="INFO" additivity="false">-->
<!--        <appender-ref ref="INFO_FILE"/>-->
<!--    </logger>-->

<!--    <logger name="warnLogger" level="WARN" additivity="false">-->
<!--        <appender-ref ref="WARN_FILE"/>-->
<!--    </logger>-->

<!--    <logger name="debugLogger" level="DEBUG" additivity="false">-->
<!--        <appender-ref ref="DEBUG_FILE"/>-->
<!--    </logger>-->

<!--    <logger name="errorLogger" level="ERROR" additivity="false">-->
<!--        <appender-ref ref="ERROR_FILE"/>-->
<!--    </logger>-->

    <!-- 定义颜色模式 -->
<!--    <conversionRule conversionWord="highlight" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>-->

</configuration>